"""给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。

你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。

你可以按任意顺序返回答案。
只存在唯一答案"""
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        n = len(nums)
        for i in range(n):
            for j in range(i+1,n):
                if nums[i] + nums[j] ==target:
                    return i,j # 双循环遍历，耗时2920ms
 
 #方法二 计算出另一个数 使用in查找 使用index方法返回索引
     def twoSum(self, nums: List[int], target: int) -> List[int]:
        for i in range(1,len(nums)):
            temp = nums[:i]
            num1 = target - nums[i]
            if num1 in temp:
                j = temp.index(num1)
                return j,i # 耗时380ms
